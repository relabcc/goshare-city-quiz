{"version":3,"file":"component---src-pages-index-js-0d33387d7ded7f3e06d2.js","mappings":"+KAwCA,IAlCe,SAAC,GAA+B,IAA7BA,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACzBC,GAAMC,EAAAA,EAAAA,UAMZ,OACE,gBAAC,KAAD,CAAKC,SAAS,YACZ,gBAAC,EAAAC,EAAD,CAAaC,IAAI,4BAA4BC,IAAI,KAAjD,sBACA,gBAAC,IAAD,CAAaH,SAAS,WAAWI,KAAK,IAAIC,MAAM,IAAIC,IAAI,IAAIC,MAAOX,EAAQC,GACzE,gBAAC,KAAD,CAAKA,OAAO,OAAOC,IAAKA,GACrBH,EAAOa,KAAI,SAACC,EAAOC,GAAR,OAER,gBAAC,EAAAC,EAAD,CACEC,IAAKF,EACLG,MAAOJ,EAAMI,MACbV,IAAKM,EAAMK,KACXC,MAAO,CACLf,SAAU,WACVJ,MAAUa,EAAMb,MAAQA,EAAQ,IAA3B,IACLC,OAAWY,EAAMZ,OAASA,EAAS,IAA7B,IACNO,KAASK,EAAMO,EAAIpB,EAAQ,IAAvB,IACJU,IAAQG,EAAMQ,EAAIpB,EAAS,IAAxB,e,6NCVfqB,GAAeC,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,CAAH,yaAqBZE,EAAe,SAAAZ,GAAK,wBACrBA,EADqB,CAExBI,OAAOS,EAAAA,EAAAA,GAASb,EAAMI,UCvCxB,ED0CkB,SAAC,GAAiC,IAAvBU,EAAsB,EAA9BC,KAAQD,cACnBE,GAAcC,EAAAA,EAAAA,MAAdD,UACDE,GAAQC,EAAAA,EAAAA,UAAS,SAAU,CAAC,gBAAnC,GACMC,GAAeC,EAAAA,EAAAA,UAAQ,kBAAMP,EAAcQ,MAAMvB,IAAIa,GAAcW,YAAW,CAACT,IAIrF,OAHAU,EAAAA,EAAAA,YAAU,WACRC,WAAWT,KACV,CAACA,IAEF,gBAACP,EAAD,CACEiB,YAAa,CACXC,GAAI,qBACJC,UAAUC,EAAAA,EAAAA,IAAW,OAAQ,SAC7BC,GAAI,OACJC,GAAI,MACJxC,SAAU,SACVI,KAAM,MAENqC,OAAQ,OAEVC,UAAU,SACVC,MAAI,EACJC,YAAY,QACZ/C,OAAO,QAEP,gBAACgD,EAAA,EAAD,CAAKC,UAAU,eAAeV,GAAG,qBAAqBvC,OAAO,OAAOwC,UAAUC,EAAAA,EAAAA,IAAW,OAAQ,SAAUS,EAAE,QAC3G,gBAACC,EAAA,EAAD,CAAQpD,MAAO,IAAKC,OAAQ,IAAKF,OAAQkC,IACzC,gBAACgB,EAAA,EAAD,CAAKI,IAAIX,EAAAA,EAAAA,IAAW,IAAK,OAAQY,OAAQ,GACvC,gBAACC,EAAA,EAAD,CAAWC,UAAU,UACnB,gBAACC,EAAA,EAAD,CACEC,SAAS,MACTC,WAAW,OACXC,MAAM,kBACNJ,UAAU,SACVK,WAAW,QALb,gBAOe,2BAPf,iBAQgB,2BARhB,iBAWA,gBAACC,EAAA,SAAD,CACEC,GAAI,SAAAC,GAAC,OAAI,gBAACC,EAAA,EAAD,eAAWC,IAAKnC,GAAUiC,KACnCG,IAAIzB,EAAAA,EAAAA,IAAW,WAAY,SAC3B0B,GAAG,MACH3B,SAAS,QACTxC,OAAO,OACPyD,SAAS,OANX,cAUA,gBAACD,EAAA,EAAD,CACEC,SAAS,UACTE,MAAM,kBACNJ,UAAU,UAHZ,cAKa,2BALb,oBAMmB,2BANnB,8B","sources":["webpack://styled-gatsby-starter/./src/containers/HomePage/Banner.js","webpack://styled-gatsby-starter/./src/containers/HomePage/index.js","webpack://styled-gatsby-starter/./src/pages/index.js"],"sourcesContent":["import { AspectRatio, Box } from '@chakra-ui/react'\r\nimport React, { useRef } from 'react'\r\nimport { GatsbyImage, StaticImage } from \"gatsby-plugin-image\"\r\n// import Parallax from 'parallax-js'\r\n\r\n\r\nconst Banner = ({ images, width, height }) => {\r\n  const ref = useRef()\r\n  // useEffect(() => {\r\n  //   new Parallax(ref.current, {\r\n  //     relativeInput: true\r\n  //   });\r\n  // }, [])\r\n  return (\r\n    <Box position=\"relative\">\r\n      <StaticImage src=\"../../image/mobile-bg.jpg\" alt=\"背景\" />\r\n      <AspectRatio position=\"absolute\" left=\"0\" right=\"0\" top=\"0\" ratio={width / height} >\r\n        <Box height=\"100%\" ref={ref}>\r\n          {images.map((layer, i) => (\r\n            // <Box key={i} data-depth={layer.depth} height=\"100%\" width=\"100%\" position=\"absolute\">\r\n              <GatsbyImage\r\n                key={i}\r\n                image={layer.image}\r\n                alt={layer.name}\r\n                style={{\r\n                  position: 'absolute',\r\n                  width: `${layer.width / width * 100}%`,\r\n                  height: `${layer.height / height * 100}%`,\r\n                  left: `${layer.x / width * 100}%`,\r\n                  top: `${layer.y / height * 100}%`,\r\n                }}\r\n              />\r\n            // </Box>\r\n          ))}\r\n        </Box>\r\n      </AspectRatio>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Banner\r\n","import React, { useEffect, useMemo } from 'react'\n// import AniLink from \"gatsby-plugin-transition-link/AniLink\"\nimport { getImage } from 'gatsby-plugin-image';\nimport { useToken } from '@chakra-ui/react';\nimport { useFormikContext } from 'formik';\nimport styled from '@emotion/styled'\n\nimport Box from '../../components/Box'\nimport Flex from '../../components/Flex'\nimport Text from '../../components/Text'\nimport Button from '../../components/Button'\nimport Container from '../../components/Container'\n// import SwipeLink from '../../components/SwipeLink'\nimport PaintLink from '../../components/PaintLink'\n\nimport Layout from '../Layout';\nimport { responsive } from '../../components/ThemeProvider/theme'\nimport Banner from './Banner';\n\nconst StyledLayout = styled(Layout)`\n@media (min-height: 630px) and (min-width: 768px) {\n  .footer {\n    padding-top: 0px;\n    padding-bottom: 0px;\n    position: absolute;\n    transform: translateX(-50%);\n    background: transparent;\n  }\n}\n@media (min-height: 811px) and (min-width: 768px) {\n  height: 812px;\n}\n@media (min-height: 630px) and (max-width: 768px) {\n  .main-wrapper {\n    height: calc(100% - 57.25px);\n  }\n}\n`\n\n\nconst hanldeImages = layer => ({\n  ...layer,\n  image: getImage(layer.image),\n})\n\nconst IndexPage = ({ data: { allMobileJson } }) => {\n  const { resetForm } = useFormikContext()\n  const [teal] = useToken('colors', ['custom.teal'])\n  const mobileImages = useMemo(() => allMobileJson.nodes.map(hanldeImages).reverse(), [allMobileJson])\n  useEffect(() => {\n    setTimeout(resetForm)\n  }, [resetForm])\n  return (\n    <StyledLayout\n      footerProps={{\n        bg: 'custom.lightBlueBg',\n        maxWidth: responsive('auto', '375px'),\n        mx: 'auto',\n        py: '1em',\n        position: 'static',\n        left: '50%',\n        // transform: responsive('none', height > 630 ? 'translateX(-50%)' : 'none'),\n        bottom: '2em',\n      }}\n      logoWidth=\"3.25em\"\n      noPt\n      headerColor=\"white\"\n      height=\"100%\"\n    >\n      <Box className=\"main-wrapper\" bg=\"custom.lightBlueBg\" height=\"100%\" maxWidth={responsive('auto', '375px')} m=\"auto\">\n        <Banner width={834} height={717} images={mobileImages} />\n        <Box mt={responsive('0', '3em')} zIndex={5}>\n          <Container textAlign=\"center\">\n            <Text\n              fontSize=\"1em\"\n              fontWeight=\"bold\"\n              color=\"custom.darkBlue\"\n              textAlign=\"center\"\n              lineHeight=\"1.75\"\n            >\n              悶了好久，超想出國玩一波！<br />\n              憑直覺決定 6 件生活小事，<br />\n              開門抵達和你最配的旅行地！\n            </Text>\n            <Button.Yellow\n              as={p => <PaintLink hex={teal} {...p} />}\n              my={responsive('1.375rem', '1.5em')}\n              to=\"q/1\"\n              maxWidth=\"180px\"\n              height=\"50px\"\n              fontSize=\"1em\"\n            >\n              進入 OMG 任意門\n            </Button.Yellow>\n            <Text\n              fontSize=\"0.875em\"\n              color=\"custom.textGray\"\n              textAlign=\"center\"\n            >\n              完成測驗領取驚喜彩蛋，<br />\n              9.10 前騎乘 GoShare，<br />\n              憑發票就抽歐美十大度假勝地雙人來回機票！\n            </Text>\n          </Container>\n        </Box>\n      </Box>\n    </StyledLayout>\n  )\n}\n\nexport default IndexPage\n","import { graphql } from 'gatsby'\r\nimport Page from 'containers/HomePage'\r\n\r\nexport default Page\r\n\r\nexport const query = graphql`\r\nquery IndexQuery {\r\n  allMobileJson {\r\n    nodes {\r\n      name\r\n      width\r\n      height\r\n      x\r\n      y\r\n      depth\r\n      image {\r\n        childImageSharp {\r\n          gatsbyImageData(\r\n            layout: FULL_WIDTH\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n"],"names":["images","width","height","ref","useRef","position","S","src","alt","left","right","top","ratio","map","layer","i","G","key","image","name","style","x","y","StyledLayout","styled","Layout","hanldeImages","getImage","allMobileJson","data","resetForm","useFormikContext","teal","useToken","mobileImages","useMemo","nodes","reverse","useEffect","setTimeout","footerProps","bg","maxWidth","responsive","mx","py","bottom","logoWidth","noPt","headerColor","Box","className","m","Banner","mt","zIndex","Container","textAlign","Text","fontSize","fontWeight","color","lineHeight","Button","as","p","PaintLink","hex","my","to"],"sourceRoot":""}