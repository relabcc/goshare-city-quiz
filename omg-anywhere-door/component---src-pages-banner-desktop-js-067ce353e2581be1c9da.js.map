{"version":3,"file":"component---src-pages-banner-desktop-js-067ce353e2581be1c9da.js","mappings":"mOAAA,SAASA,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,IAK3B,OAAOL,IAGOS,MAAMC,KAAMR,WA4BvB,IAAIS,GAA2B,QAAW,SAAUC,EAAOC,GAChE,IAAIC,EAAeF,EAAMG,MACrBA,OAAyB,IAAjBD,EAA0B,EAAI,EAAIA,EAC1CE,EAAWJ,EAAMI,SACjBC,EAAYL,EAAMK,UAClBC,EA9BN,SAAuCd,EAAQe,GAC7C,GAAc,MAAVf,EAAgB,MAAO,GAC3B,IAEIC,EAAKJ,EAFLD,EAAS,GACToB,EAAatB,OAAOuB,KAAKjB,GAG7B,IAAKH,EAAI,EAAGA,EAAImB,EAAWjB,OAAQF,IACjCI,EAAMe,EAAWnB,GACbkB,EAASG,QAAQjB,IAAQ,IAC7BL,EAAOK,GAAOD,EAAOC,IAGvB,OAAOL,EAkBIuB,CAA8BX,EAAO,CAAC,QAAS,WAAY,cAGlEY,EAAQ,gBAAoBR,GAE5BS,GAAa,IAAAC,IAAG,sBAAuBT,GAE3C,OAAoB,gBAAoB,SAAYpB,EAAS,CAC3DgB,IAAKA,EACLc,SAAU,WACVV,UAAWQ,EACXG,QAAS,CACPC,OAAQ,EACRC,QAAS,KACTC,QAAS,QACTC,eAAe,QAAcjB,GAAO,SAAUkB,GAC5C,OAAO,EAAIA,EAAI,IAAM,QAGzBC,MAAO,CACL,mBAAoB,CAClBC,SAAU,SACVR,SAAU,WACVS,IAAK,IACLC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNR,QAAS,OACTS,eAAgB,SAChBC,WAAY,SACZC,MAAO,OACPb,OAAQ,QAEV,qBAAsB,CACpBc,UAAW,WAGdzB,GAAOM,MAGR,OACFb,EAAYiC,YAAc,e,wBCrD5B,EA/Be,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQH,EAAoB,EAApBA,MAAOb,EAAa,EAAbA,OACzBhB,GAAMiC,EAAAA,EAAAA,UAMZ,OACE,gBAACnC,EAAD,CAAaI,MAAO2B,EAAQb,EAAQkB,GAAG,sBACrC,gBAAC,KAAD,CAAKlB,OAAO,OAAOhB,IAAKA,GACrBgC,EAAOG,KAAI,SAACC,EAAOhD,GAAR,OAER,gBAAC,EAAAiD,EAAD,CACE7C,IAAKJ,EACLkD,MAAOF,EAAME,MACbC,IAAKH,EAAMI,KACXC,MAAO,CACL3B,SAAU,WACVe,MAAUO,EAAMP,MAAQA,EAAQ,IAA3B,IACLb,OAAWoB,EAAMpB,OAASA,EAAS,IAA7B,IACNU,KAASU,EAAMM,EAAIb,EAAQ,IAAvB,IACJN,IAAQa,EAAMO,EAAI3B,EAAS,IAAxB,c,8DCNnB,UAfgB,SAAC,GAA6C,IAAjB4B,EAAgB,EAA1CC,KAAQC,eAAkBF,MACrCZ,GAASe,EAAAA,EAAAA,UAAQ,kBAAMH,EAAMT,KAAI,SAAAC,GAAK,wBACvCA,EADuC,CAE1CE,OAAOU,EAAAA,EAAAA,GAASZ,EAAME,YACpBW,YAAW,CAACL,IAEhB,OACE,gBAAC,IAAD,CACEf,MAAO,KACPb,OAAQ,KACRgB,OAAQA","sources":["webpack://styled-gatsby-starter/./node_modules/@chakra-ui/layout/dist/esm/aspect-ratio.js","webpack://styled-gatsby-starter/./src/containers/HomePage/Banner.js","webpack://styled-gatsby-starter/./src/pages/banner/desktop.js"],"sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx, mapResponsive, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * React component used to cropping media (videos, images and maps)\n * to a desired aspect ratio.\n *\n * @see Docs https://chakra-ui.com/aspectratiobox\n */\n\nexport var AspectRatio = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _props$ratio = props.ratio,\n      ratio = _props$ratio === void 0 ? 4 / 3 : _props$ratio,\n      children = props.children,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, [\"ratio\", \"children\", \"className\"]); // enforce single child\n\n\n  var child = React.Children.only(children);\n\n  var _className = cx(\"chakra-aspect-ratio\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    position: \"relative\",\n    className: _className,\n    _before: {\n      height: 0,\n      content: \"\\\"\\\"\",\n      display: \"block\",\n      paddingBottom: mapResponsive(ratio, function (r) {\n        return 1 / r * 100 + \"%\";\n      })\n    },\n    __css: {\n      \"& > *:not(style)\": {\n        overflow: \"hidden\",\n        position: \"absolute\",\n        top: \"0\",\n        right: \"0\",\n        bottom: \"0\",\n        left: \"0\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\"\n      },\n      \"& > img, & > video\": {\n        objectFit: \"cover\"\n      }\n    }\n  }, rest), child);\n});\n\nif (__DEV__) {\n  AspectRatio.displayName = \"AspectRatio\";\n}","import { AspectRatio, Box } from '@chakra-ui/react'\r\nimport React, { useEffect, useRef } from 'react'\r\nimport { GatsbyImage } from \"gatsby-plugin-image\"\r\n// import Parallax from 'parallax-js'\r\n\r\nconst Banner = ({ images, width, height }) => {\r\n  const ref = useRef()\r\n  // useEffect(() => {\r\n  //   new Parallax(ref.current, {\r\n  //     relativeInput: true\r\n  //   });\r\n  // }, [])\r\n  return (\r\n    <AspectRatio ratio={width / height} bg=\"custom.lightBlueBg\">\r\n      <Box height=\"100%\" ref={ref}>\r\n        {images.map((layer, i) => (\r\n          // <Box key={i} data-depth={layer.depth} height=\"100%\" width=\"100%\" position=\"absolute\">\r\n            <GatsbyImage\r\n              key={i}\r\n              image={layer.image}\r\n              alt={layer.name}\r\n              style={{\r\n                position: 'absolute',\r\n                width: `${layer.width / width * 100}%`,\r\n                height: `${layer.height / height * 100}%`,\r\n                left: `${layer.x / width * 100}%`,\r\n                top: `${layer.y / height * 100}%`,\r\n              }}\r\n            />\r\n          // </Box>\r\n        ))}\r\n      </Box>\r\n    </AspectRatio>\r\n  )\r\n}\r\n\r\nexport default Banner\r\n","import React, { useMemo } from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { getImage } from 'gatsby-plugin-image'\r\nimport Banner from '../../containers/HomePage/Banner'\r\n\r\nconst Desktop = ({ data: { allDesktopJson: { nodes } } }) => {\r\n  const images = useMemo(() => nodes.map(layer => ({\r\n    ...layer,\r\n    image: getImage(layer.image),\r\n  })).reverse(), [nodes])\r\n\r\n  return (\r\n    <Banner\r\n      width={2560}\r\n      height={1140}\r\n      images={images}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Desktop\r\n\r\nexport const query = graphql`\r\nquery DesktopBannerQuery {\r\n  allDesktopJson {\r\n    nodes {\r\n      name\r\n      width\r\n      height\r\n      x\r\n      y\r\n      depth\r\n      image {\r\n        childImageSharp {\r\n          gatsbyImageData(\r\n            layout: FULL_WIDTH\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","AspectRatio","props","ref","_props$ratio","ratio","children","className","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","child","_className","cx","position","_before","height","content","display","paddingBottom","r","__css","overflow","top","right","bottom","left","justifyContent","alignItems","width","objectFit","displayName","images","useRef","bg","map","layer","G","image","alt","name","style","x","y","nodes","data","allDesktopJson","useMemo","getImage","reverse"],"sourceRoot":""}