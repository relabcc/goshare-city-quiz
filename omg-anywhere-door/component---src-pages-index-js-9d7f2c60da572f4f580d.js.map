{"version":3,"file":"component---src-pages-index-js-9d7f2c60da572f4f580d.js","mappings":"0JAyCA,IAtCwB,SAA2BA,EAAKC,EAAcC,GACpE,IAAK,KACH,MAAO,CAACD,EAAc,cAIxB,IAAIE,GAAK,IAAAC,WAAS,WAChB,IACE,IAAIC,EAAsBC,eAAeC,QAAQP,GAEjD,MAAmC,iBAAxBK,GACTC,eAAeE,QAAQR,EAAKE,EAAMO,OAAOR,GAAgBS,KAAKC,UAAUV,IACjEA,GAEAC,EAAMG,EAAsBK,KAAKE,MAAMP,GAAuB,QAEvE,MAAOF,GAIP,OAAOF,MAGPY,EAAQV,EAAG,GACXW,EAAWX,EAAG,GAWlB,OARA,IAAAY,YAAU,WACR,IACE,IAAIC,EAAkBd,EAAMO,OAAOI,GAASH,KAAKC,UAAUE,GAC3DP,eAAeE,QAAQR,EAAKgB,GAC5B,MAAOb,QAIJ,CAACU,EAAOC,K,oOClBXG,GAAeC,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,CAAH,+uBCjBlB,EDyDkB,WAChB,IAAQE,GAAcC,EAAAA,EAAAA,MAAdD,UACCE,GAAYC,EAAAA,EAAAA,GAAkB,aAAa,GAApD,GACOC,GAAQC,EAAAA,EAAAA,UAAS,SAAU,CAAC,gBAAnC,GAKA,OAHAV,EAAAA,EAAAA,YAAU,WACRW,WAAWN,KACV,CAACA,IAEF,gBAACH,EAAD,CACEU,YAAa,CACXC,GAAI,qBACJC,UAAUC,EAAAA,EAAAA,IAAW,OAAQ,SAC7BC,GAAI,OACJC,SAAU,SACVC,KAAM,MAENC,OAAQ,QACRC,GAAI,SAENC,MAAI,EACJC,YAAY,QACZC,OAAO,OACPV,GAAG,sBAEH,gBAACW,EAAA,EAAD,CAAKC,UAAU,eAAeZ,GAAG,qBAAqBU,QAAQR,EAAAA,EAAAA,IAAW,OAAQ,QAASD,UAAUC,EAAAA,EAAAA,IAAW,OAAQ,SAAUW,EAAE,QAEjI,gBAAC,EAAAC,EAAD,CAAaC,IAAI,yBAAyBC,IAAI,MAAMC,OAAO,YAAYC,YAAY,OAAOC,QAAS,CAAC,QAApG,sBACA,gBAACR,EAAA,EAAD,CAAKS,IAAIlB,EAAAA,EAAAA,IAAW,IAAK,OAAQmB,OAAQ,GACvC,gBAACC,EAAA,EAAD,CAAWC,UAAU,UACnB,gBAACC,EAAA,EAAD,CACEC,SAAS,MACTC,WAAW,OACXC,MAAM,kBACNJ,UAAU,SACVK,WAAW,QALb,gBAOe,2BAPf,iBAQgB,2BARhB,iBAWA,gBAACC,EAAA,SAAD,CACEC,GAAI,SAAAC,GAAC,OAAI,gBAACC,EAAA,EAAD,eAAWC,IAAKrC,GAAUmC,KACnCG,IAAIhC,EAAAA,EAAAA,IAAW,WAAY,SAC3BiC,GAAG,MACHlC,SAAS,QACTS,OAAO,OACPe,SAAS,MACTW,QAAS,kBAAM1C,GAAS,KAP1B,cAWA,gBAAC8B,EAAA,EAAD,CACEC,SAAS,UACTE,MAAM,kBACNJ,UAAU,UAHZ,cAKa,2BALb,oBAMmB,2BANnB,8B","sources":["webpack://styled-gatsby-starter/./node_modules/react-use/esm/useSessionStorage.js","webpack://styled-gatsby-starter/./src/containers/HomePage/index.js","webpack://styled-gatsby-starter/./src/pages/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { isBrowser } from './misc/util';\n\nvar useSessionStorage = function useSessionStorage(key, initialValue, raw) {\n  if (!isBrowser) {\n    return [initialValue, function () {}];\n  } // eslint-disable-next-line react-hooks/rules-of-hooks\n\n\n  var _a = useState(function () {\n    try {\n      var sessionStorageValue = sessionStorage.getItem(key);\n\n      if (typeof sessionStorageValue !== 'string') {\n        sessionStorage.setItem(key, raw ? String(initialValue) : JSON.stringify(initialValue));\n        return initialValue;\n      } else {\n        return raw ? sessionStorageValue : JSON.parse(sessionStorageValue || 'null');\n      }\n    } catch (_a) {\n      // If user is in private mode or has storage restriction\n      // sessionStorage can throw. JSON.parse and JSON.stringify\n      // cat throw, too.\n      return initialValue;\n    }\n  }),\n      state = _a[0],\n      setState = _a[1]; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n\n  useEffect(function () {\n    try {\n      var serializedState = raw ? String(state) : JSON.stringify(state);\n      sessionStorage.setItem(key, serializedState);\n    } catch (_a) {// If user is in private mode or has storage restriction\n      // sessionStorage can throw. Also JSON.stringify can throw.\n    }\n  });\n  return [state, setState];\n};\n\nexport default useSessionStorage;","import React, { useEffect, useMemo } from 'react'\n// import AniLink from \"gatsby-plugin-transition-link/AniLink\"\nimport { getImage, StaticImage } from 'gatsby-plugin-image';\nimport { useToken } from '@chakra-ui/react';\nimport { useFormikContext } from 'formik';\nimport styled from '@emotion/styled'\nimport { useSessionStorage } from 'react-use';\n\nimport Box from '../../components/Box'\nimport Flex from '../../components/Flex'\nimport Text from '../../components/Text'\nimport Button from '../../components/Button'\nimport Container from '../../components/Container'\n// import SwipeLink from '../../components/SwipeLink'\nimport PaintLink from '../../components/PaintLink'\n\nimport Layout from '../Layout';\nimport { responsive } from '../../components/ThemeProvider/theme'\n// import Banner from './Banner';\n\nconst StyledLayout = styled(Layout)`\n  @media (min-width: 784px) {\n    background-color: transparent;\n  }\n  @media (min-height: 640px) and (min-width: 784px) {\n    .footer {\n      padding-top: 0px;\n      padding-bottom: 0px;\n      position: absolute;\n      transform: translateX(-50%);\n      background: transparent;\n    }\n  }\n  @media (max-height: 639px) {\n    .footer {\n      padding-top: 2em;\n      padding-bottom: 1.5em;\n    }\n  }\n  @media (min-height: 811px) and (min-width: 784px) {\n    height: 812px;\n  }\n  @media (min-height: 640px) and (max-width: 784px) {\n    .main-wrapper {\n      height: calc(100% - 48px);\n    }\n  }\n  @media (max-height: 639px) and (min-width: 784px) {\n    .main-wrapper {\n      height: auto;\n    }\n  }\n`\n\n\n// const hanldeImages = layer => ({\n//   ...layer,\n//   image: getImage(layer.image),\n// })\n\nconst IndexPage = () => {\n  const { resetForm } = useFormikContext()\n  const [, setValue] = useSessionStorage('view-home', false);\n  const [teal] = useToken('colors', ['custom.teal'])\n  // const mobileImages = useMemo(() => allMobileJson.nodes.map(hanldeImages).reverse(), [allMobileJson])\n  useEffect(() => {\n    setTimeout(resetForm)\n  }, [resetForm])\n  return (\n    <StyledLayout\n      footerProps={{\n        bg: 'custom.lightBlueBg',\n        maxWidth: responsive('auto', '375px'),\n        mx: 'auto',\n        position: 'static',\n        left: '50%',\n        // transform: responsive('none', height > 630 ? 'translateX(-50%)' : 'none'),\n        bottom: '1.5em',\n        pb: '1.5em'\n      }}\n      noPt\n      headerColor=\"white\"\n      height=\"100%\"\n      bg=\"custom.lightBlueBg\"\n    >\n      <Box className=\"main-wrapper\" bg=\"custom.lightBlueBg\" height={responsive('auto', '100%')} maxWidth={responsive('auto', '375px')} m=\"auto\">\n        {/* <Banner width={834} height={717} images={mobileImages} /> */}\n        <StaticImage src=\"../../image/banner.png\" alt=\"主視覺\" layout=\"fullWidth\" placeholder=\"none\" formats={['auto']} />\n        <Box mt={responsive('0', '5vh')} zIndex={5}>\n          <Container textAlign=\"center\">\n            <Text\n              fontSize=\"1em\"\n              fontWeight=\"bold\"\n              color=\"custom.darkBlue\"\n              textAlign=\"center\"\n              lineHeight=\"1.75\"\n            >\n              悶了好久，超想出國玩一波！<br />\n              憑直覺決定 6 件生活小事，<br />\n              開門抵達和你最配的旅行地！\n            </Text>\n            <Button.Yellow\n              as={p => <PaintLink hex={teal} {...p} />}\n              my={responsive('1.375rem', '1.5em')}\n              to=\"q/1\"\n              maxWidth=\"180px\"\n              height=\"50px\"\n              fontSize=\"1em\"\n              onClick={() => setValue(true)}\n            >\n              進入 OMG 任意門\n            </Button.Yellow>\n            <Text\n              fontSize=\"0.875em\"\n              color=\"custom.textGray\"\n              textAlign=\"center\"\n            >\n              完成測驗領取驚喜彩蛋，<br />\n              9.10 前騎乘 GoShare，<br />\n              憑發票就抽歐美十大度假勝地雙人來回機票！\n            </Text>\n          </Container>\n        </Box>\n      </Box>\n    </StyledLayout>\n  )\n}\n\nexport default IndexPage\n","import { graphql } from 'gatsby'\r\nimport Page from 'containers/HomePage'\r\n\r\nexport default Page\r\n\r\n// export const query = graphql`\r\n// query IndexQuery {\r\n//   allMobileJson {\r\n//     nodes {\r\n//       name\r\n//       width\r\n//       height\r\n//       x\r\n//       y\r\n//       depth\r\n//       image {\r\n//         childImageSharp {\r\n//           gatsbyImageData(\r\n//             layout: FULL_WIDTH\r\n//           )\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n// }\r\n// `\r\n"],"names":["key","initialValue","raw","_a","useState","sessionStorageValue","sessionStorage","getItem","setItem","String","JSON","stringify","parse","state","setState","useEffect","serializedState","StyledLayout","styled","Layout","resetForm","useFormikContext","setValue","useSessionStorage","teal","useToken","setTimeout","footerProps","bg","maxWidth","responsive","mx","position","left","bottom","pb","noPt","headerColor","height","Box","className","m","S","src","alt","layout","placeholder","formats","mt","zIndex","Container","textAlign","Text","fontSize","fontWeight","color","lineHeight","Button","as","p","PaintLink","hex","my","to","onClick"],"sourceRoot":""}